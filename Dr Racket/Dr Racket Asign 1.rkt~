#lang racket
(define (make-seg-list x y)
  (if (>= x y) (car (cons x y)) (cons x(make-seg-list(+ x 1)y))))

(make-seg-list 1 5)
(make-seg-list 5 1)

(define (make-whole-list x) (make-seg-list 1 x))

(make-whole-list 5)
(make-whole-list 3)

(define (list-length x) (length x))

(list-length (list 1 2 3 4))
(list-length (list))

(define (concat-list x y)
  (list* (list x y)))
      
(concat-list (list 1 2 3) (list 4 5))
(concat-list (list 5 4 3) (list 2 1))